_____ auth-microservice _____

Docker Run:
docker run -d --name authservice-postgres --env POSTGRES_DB=authdb --env POSTGRES_USER=user --env POSTGRES_PASSWORD=123 -p 5432:5432 postgres:latest

pgAdmin4 db check:
servers sağ tık > register > hostname: 'localhost' > maintenance db: 'postgres' > username: 'user' > password: '123'




_____ user-microservice _____

Docker Run:
docker run -d --name userservice-mongo -p 27017:27017 -e MONGO_INITDB_DATABASE=userdb mongo:latest

MongoDB Compass: https://www.mongodb.com/try/download/compass

- "userdb" adıyla db oluşturuldu (application.propeties'de yazan)
- MongoSH terminaline girip use userdb komutuyla userdb'ye geçiş yapıldı
- Okuma yazma işlemlerini yapabilmek adına db.createUser({user: "user",pwd: "123",roles: ["readWrite","dbAdmin"]}) komutuyla user oluşturuldu




_____ Redis Docker Image _____

Spring Data Redis: 
https://docs.spring.io/spring-data/redis/reference/

Redis Docker Image:
docker run --name microservice-redis -p 6379:6379 -d redis

Redis GUI Docker Image: (GUI'de ne olup bittiğini daha net görebilmek adına eklenir)
docker run -d --name redisinsight -p 8001:8001 redislabs/redisinsight
